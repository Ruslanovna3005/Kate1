GIT Homework 2

Для выполнения задания у вас должен быть установлен для Windows - GitBash.
Создан аккаунт в GitHub
Создан репозиторий в GitHub
Созданный репозиторий склонирован на локальный компьютер в отдельную папку.

Все шаги сценария выполняйте в терминале GitBush, Terminal, в папке под гитом.


Как отправить ДЗ на проверку.
 1. Создайте текстоовый файл как в первом ДЗ по Terminal.
 2. Сценарий перенесите в этот файл.
 3. На против каждого действия - напишите команду в GitBash

Файл со сценарием и ссылку на свой гит хаб отправляйте менторам на проверку.

 4. Создать файл “new.json” - touch new.json

 5. Добавить файл под гит. - git add new.json

 6. Закоммитить файл. - git commit -m "added new.json file"

 7. Отправить файл на внешний GitHub репозиторий. - git push

 8. Создать файлы new2.json, new2.xml, new2.txt - touch new2.json new2.xml new2.txt

 9. Добавить файлы под гит. - git add .

 10. Закоммитить файлы. - git commit -am "added json,xml,txt"

 11. Отправить файлы на внешний GitHub репозиторий. git push

 12. Отредактировать содержание файла “new2.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). - 
vim new2.txt -----> 
Ekateryna Ruslanovna
27 years old
1 Cat Vasya
350$

 13. Отредактировать содержание файла “new2.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON.
vim new2.json  ------>
{
        "name": "Kateryna Ruslanovna",
        "age": 27,
        "pets": 1,
        "DesiredSalary": 350
}

 14. Добавить и закоммитить “new2.txt” одной строчкой. - git add new2.txt && git commit -m "Added new lines"

 15. Добавить и закоммитить “new2.json” одной строчкой. - git add new2.json && git commit -m "Added new lines"

 16. Отправить изменения на внешний репозиторий. - git push

 17. Отредактировать содержание файла “new2.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.
vim new2.xml

<information>
	<name>Kateryna Ruslanovna</name>
	<age>27</age>
	<pets>1 cat</pets>
	<desiredSalary>350$</desiredSalary>
</information>

 18. Добавить и закоммитить “new2.xml” одной строчкой. - git add new2.xml && git commit -m "Added new lines"

 19. Отправить изменения на внешний репозиторий. - git push

 20. Отправить предыдущее домашнее задание по GitBush Terminal на внешний репозиторий. 
 git add HW1.txt
 git commit -m "Added HW1"
 git push

 21. В веб интерфейсе GitHub создать файл new3.txt. - "add file" -> "create new file" -> "new3.txt" -> "commit new file"

 22. Отредактировать в веб интерфейсе содержание файла “new3.txt” - написать информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить).
Edit ->

Film "1+1"
Series "Ship"
Food "Pasta"
Season "summer"
Country "Switzerland"

 23. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - "commit changes"

 24. Синхронизировать внешний и локальный репозитории (слить изменения с внешнего репозитория) - git pull

 25. Отредактировать в веб интерфейсе содержание файла “new2.json” - добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). Всё в формате JSON.
Edit ->
{
	"name": "Kateryna Ruslanovna",
	"age": 27,
	"pets": 1,
	"DesiredSalary": 350,
	"Film": "1+1",
	"Serial": "Ship",
	"Food": "pasta",
	"Season": "summer",
	"Country": "Switzerland"
}

 26. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - "commit changes"

 27. Синхронизировать внешний и локальный репозитории - git pull

 28. Отредактировать в веб интерфейсе содержание файла “new2.xml” - добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить). Всё в формате XML.
Edit ->
<information>
	<name>Kateryna Ruslanovna</name>
	<age>27</age>
	<pets>1 cat</pets>
	<desiredSalary>350$</desiredSalary>
	<film>1+1</film>
	<serial>Ship</serial>
	<food>pasta</food>
	<season>summer</season>
	<country>Switzerland</country>
</information>

 29. Сделать Commit changes (сохранить) изменения на веб интерфейсе.- "commit changes"

 30. Синхронизировать внешний и локальный репозитории - git pull

Данные для заполнения и редактирования файлов можете использовать любые, не обязательно свои.
